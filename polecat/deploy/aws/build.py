import os
import subprocess
import sys
from pathlib import Path
from shutil import copytree, make_archive
from tempfile import TemporaryDirectory

from ...utils.feedback import feedback

server_main_py = '''# Auto-generated by Polecat

from polecat.deploy.aws.server import LambdaServer

server = LambdaServer()


def handler(event, context):
    return server.handle(event, context)
'''

admin_main_py = '''# Auto-generated by Polecat

from polecat.deploy.aws.admin import Admin

admin = Admin()


def handler(event, context):
    return admin.handle(event, context)
'''


@feedback
def build(source=None, feedback=None):
    source = source or os.getcwd()
    with TemporaryDirectory() as root:
        root = Path(root)
        with feedback('Build server archive'):
            # TODO: Find a way to automatically set this version.
            # install_package('polecat==0.0.5', Path(root))
            install_package('.', Path(root))
            copytree(source, root / os.path.basename(source))
            with open(root / 'main.py', 'wt') as f:
                f.write(server_main_py)
            make_archive('server', 'zip', str(root))
        with feedback('Build admin archive'):
            with open(root / 'main.py', 'wt') as f:
                f.write(admin_main_py)
            make_archive('admin', 'zip', str(root))


def install_package(package, root):
    subprocess.check_output([
        sys.executable, '-m', 'pip', 'install', '--target', root, package
    ], stderr=subprocess.PIPE)
